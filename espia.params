# Copyright 2006 by Sean Luke and George Mason University
# Licensed under the Academic Free License version 3.0
# See the file "LICENSE" for more information

parent.0 = ../../simple/simple.params

# N ESTA CLASE SE ENCUENTRA LA FUNCION DE FITNESS EN EL METODO EVALUATE
eval.problem = espia.Espia

# ARCHIVOS DE ENTRADA Y SALIDA DEL PROGRAMA
eval.problem.in = espia.in
# eval.problem.out = MonaLisaOut.png

# ESTOS VIENEN POR DEFECTO
state = 				ec.simple.SimpleEvolutionState
init = 					ec.simple.SimpleInitializer
finish = 	        	ec.simple.SimpleFinisher
exch = 					ec.simple.SimpleExchanger
eval =					ec.simple.SimpleEvaluator
stat =					ec.simple.SimpleStatistics
breed = 				ec.simple.SimpleBreeder

# CANTIDAD DE GENERACIONES
generations =				1000

# PARAR SI ENCUENTRA LA SOLUCION OPTIMA
quit-on-run-complete =				true

# ESTOS VALORES TAMPOCO SE MUY BIEN PARA QUE SON
pop = 					ec.Population
pop.subpops =				1
pop.subpop.0 = 				ec.Subpopulation
pop.subpop.0.duplicate-retries =	0
pop.subpop.0.species =                  ec.vector.IntegerVectorSpecies


# TIPO DE MUTACION Y LA PROBABILIDAD
pop.subpop.0.species.mutation-type =	reset
pop.subpop.0.species.mutation-bounded = true
pop.subpop.0.species.mutation-prob = 	1
pop.subpop.0.species.mutation-stdev =   0.1


# ESTO NO SE MUY BIEN PARA QUE SON CADA COSA
pop.subpop.0.species.pipe = 		ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.likelihood = 1.0
pop.subpop.0.species.pipe.source.0 =             ec.vector.breed.VectorCrossoverPipeline
pop.subpop.0.species.pipe.source.0.likelihood = 0.75
pop.subpop.0.species.pipe.source.0.source.0 =	ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.1 = 	same
pop.subpop.0.species.pipe.source.0.source.1.size = 1
select.tournament.size = 2

# numero de iniciacion, time empieza con la fecha actual
seed.0 = time

# la funcion de fitness a usar
pop.subpop.0.species.fitness =		ec.simple.SimpleFitness

# tipo de cruzamiento y la probabilidad
pop.subpop.0.species.crossover-type = one
pop.subpop.0.species.crossover-prob =	1

# el tipo de vector a utilizar y los maximos y minimos que puede tener
pop.subpop.0.species.ind =		ec.vector.IntegerVectorIndividual
pop.subpop.0.species.min-gene =	1
pop.subpop.0.species.max-gene =	4

# tamaño del genoma
pop.subpop.0.species.genome-size =      5

# tamaño de la poblacion
pop.subpop.0.size =			50
